import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./styles/globals.css";
import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  SignInButton,
  SignUpButton,
  UserButton,
} from "@clerk/nextjs";
import { SidebarProvider, SidebarInset } from "@/presentation/components/ui/sidebar";
import { AppSidebar } from "@/presentation/components/layout/app-sidebar";
import { Topbar } from "@/presentation/components/layout/topbar";
import { cookies } from "next/headers";
import PageTransition from "@/presentation/components/shared/PageTransition";
import ScrollRouter from "@/presentation/components/shared/scrollrouter";
import { Toaster } from "@/presentation/components/ui/toaster";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const defaultOpen = cookieStore.get("sidebar_state")?.value === "true";
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ClerkProvider>
          <SidebarProvider defaultOpen={defaultOpen}>
          <AppSidebar />
          <SidebarInset>
            <div className="relative min-h-svh">
              {/* Shared background wrapper for smooth transitions */}
              <div className="absolute inset-0 -z-10 bg-background transition-colors duration-300" />
              <div className="pointer-events-none absolute inset-x-0 top-0 z-20">
                <div className="flex items-center p-2 pointer-events-auto">
                  <div className="flex items-center gap-4 w-full justify-between">
                    <Topbar />
                    <div className="pr-4">
                      <SignedOut>
                        <SignInButton />
                        <SignUpButton />
                      </SignedOut>
                      <SignedIn>
                        <UserButton />
                      </SignedIn>
                    </div>
                  </div>
                </div>
              </div>
              <ScrollRouter />
              {/* Split transition: outer for exit, inner for enter */}
              {/* @ts-expect-error: custom props for split transitions */}
              <PageTransition exitOnly={true}>
                {/* @ts-expect-error: custom props for split transitions */}
                <PageTransition enterOnly={true}>{children}</PageTransition>
              </PageTransition>
            </div>
          </SidebarInset>
          <Toaster />
          </SidebarProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}

export default RootLayout;
